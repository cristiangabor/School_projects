'''CREATE TABLE Product(
				ProductID integer,
				Name text,
				Price real,
				ProductTypeID integer,
				Primary key(ProductID),
				Foregin key(ProductTypeID) references ProductType(ProductTypeID))'''

'''CREATE TABLE ProductType (
				ProductTypeID integer,
				Description text,
				primary key(ProductTypeID)) '''

import sqlite3

def create_table(db_name,table_name,sql):
	with sqlite3.connect(db_name) as db:
		cursor=db.cursor()
		cursor.execute("select name from sqlite_master where name=?",(table_name,))
		result=cursor.fetchall()
		kepp_table=True
		if len(result) == 1:
			response = raw_input("The table {0} alerady exists, do yoy wish to recreate it (y/n):".format(table_name))
			if response=='y':
				kepp_table=False
				print 'The {0} table will be recreated- all existing data will be lost'.format(table_name)
				cursor.execute('drop table if exists {0}'.format(table_name))
				db.commit()
			else:
				print "The existing table was kept"
		else:
			kepp_table=False
		if not kepp_table:		
			cursor.execute(sql)
			db.commit()

def creat_customer():
	
	sql='''create table Customer(
		CustomerID integer,
		FirstName text,
		LastName text,
		Street text,
		Town text,
		PostCode text,
		TelephoneNumber integer,
		EMailAddress text,
		primary key(CustomerID))'''
	
	create_table(db_name,'Customer',sql)

def create_customer_order():
	
	sql='''create table CustomerOrder(
		OrderID integer,
		Date text,
		Time text,
		CustomerID integer,
		primary key (OrderID),
		foreign key (CustomerID) references Customer(CustomerID))'''
	
	create_table(db_name,'CustomerOrder',sql)

def create_order_item():
	
	sql='''create table OrderItem(
		OrderItemID integer,
		OrderID integer,
		ProductID integer,
		Quantity integer,
		primary key(OrderItemID),
		foreign key(ProductID) references Product(ProductID),
		foreign key(OrderID) references CustomerOrder(OrderID))''' 
	
	create_table(db_name,'OrderItem',sql)

def create_product_table():
	
	sql="""create table Product
		(ProductID integer,
		Name text,
		Price real,
		ProductTypeID integer,
		primary key(ProductID),
		foreign key(ProductTypeID) references ProductType(ProductTypeID)
		on update cascade on delete cascade)"""

	create_table(db_name,"Product",sql)

def create_product_type_table():
	sql='''create table ProductType
		(ProductTypeID integer,
		Description text,
		primary key(ProductTypeID))'''

	create_table(db_name, "ProductType", sql)


db_name='coffe_shop.db'
creat_customer()
create_customer_order()
create_order_item()
create_product_table()
create_product_type_table()
